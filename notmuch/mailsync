#!/bin/zsh

# Exit if any command fails
set -e

CONFIGDIR=$HOME/.config/notmuch
MAILDIR=$HOME/mail

# Already running?
zmodload zsh/net/socket
SOCKET=/tmp/mailsync.$UID
if ! zsocket -l "$SOCKET" 2>/dev/null; then
    echo "Process already running."
    exit 1
fi

TRAPZERR() {
    rm "$SOCKET"
}
TRAPINT() {
    return $(( 128 + $1 ))
}

# Check the DISPLAY environment variable (needed for D-Bus and awesome-client)
[[ -z "$DISPLAY" ]] && export DISPLAY=:0.0 || true

# Tell awesome the update begins
n=$(notmuch count tag:unread)
echo "tb_mails_updating(true)\ntb_mails_set_count($n)" | awesome-client

# Removes messages with the "deleted" tag
(( $(notmuch count tag:deleted) > 0 )) && (notmuch search --output=files tag:deleted | xargs -rd'\n' rm)

# Several functions are used to control the sync flow. backup(), Some of them
# are run asynchronously, so we need to take special care of their outputs in
# order to leave them readable.
autoload -U colors
colors
function status_start() {
    local prefix name
    prefix=$1; shift
    msg=$*
    echo -ne "\r${prefix}${fg_bold[blue]}[${fg_bold[white]}${msg}${fg_bold[blue]}]${fg_no_bold[default]}"
}
function status_ok() {
    local prefix name
    prefix=$1; shift
    msg=$*
    echo -ne "\r${prefix}${fg_bold[green]}[${fg_bold[white]}${msg}${fg_bold[green]}]${fg_no_bold[default]}"
}
function status_err() {
    local prefix name
    prefix=$1; shift
    msg=$*
    echo -ne "\r${prefix}${fg_bold[red]}[${fg_bold[white]}${msg}${fg_bold[red]}]${fg_no_bold[default]}"
    exit 1
}
function status_wait() {
    local prefix name
    prefix=$1; shift
    msg=$*
    echo -ne "\r${prefix}${fg_no_bold[blue]}[${fg_no_bold[white]}${msg}${fg_no_bold[blue]}]${fg_no_bold[default]}"
}

# Backup the DB
function backup() {
    local prefix name
    prefix=$1; shift
    msg=$*

    # Is a recent backup available?
    BACKUPFILE=$CONFIGDIR/db-$(date +"%Y%m%d").xz
    if [ ! -e "$BACKUPFILE" ]; then
        status_start "$prefix" "$msg"
        (notmuch dump | xz > "$BACKUPFILE") || status_err "$prefix" "$msg"
        # Remove backups older than a month
        find "$CONFIGDIR" -name 'db-*.xz' -and -mtime +30 -exec rm \{\} +
        status_ok "$prefix" "$msg"
    fi
}

# Fetch new mails
function fetch_mail() {
    local prefix name
    prefix=$1; shift
    msg=$*
    status_start "$prefix" "$msg"
    offlineimap -o -u quiet || status_err "$prefix" "$msg"
    status_ok "$prefix" "$msg"
}

# Update the notmuch DB
function update_db() {
    local prefix name
    prefix=$1; shift
    msg=$*
    status_start "$prefix" "$msg"
    nosync notmuch new >/dev/null || status_err "$prefix" "$msg"
    status_ok "$prefix" "$msg"
}

# Autotag new messages
function autotag() {
    local prefix name
    prefix=$1; shift
    msg=$*
    status_start "$prefix" "$msg"
    nosync $CONFIGDIR/autotag.py -q || status_err "$prefix" "$msg"
    status_ok "$prefix" "$msg"
}

# Run first steps asynchronously
backup       "\t\t\t\t\t\t" "Backup"     &
fetch_mail   ""             "Fetch mail" &

status_wait  "\t\t"         "DB update"
status_wait  "\t\t\t\t"     "Autotag"
wait

update_db    "\t\t"         "DB update"
autotag      "\t\t\t\t"     "Autotag"
echo

# Update the display in awesome
n=$(notmuch count tag:unread)
echo "tb_mails_updating(nil)\ntb_mails_set_count($n)" | awesome-client

# And display a notification
$CONFIGDIR/notify.py

rm "$SOCKET"
